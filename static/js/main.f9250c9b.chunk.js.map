{"version":3,"sources":["components/AssetsInfo.js","components/useSortForm.js","api/data.js","components/CollectionsInfo.js","App.js","serviceWorker.js","index.js"],"names":["AssetsInfo","selectedAssets","setMasterId","masterId","initialData","useState","data","setData","useEffect","sortKey","sort","a","b","useSortForm","setSortAssets","className","length","map","asset","key","id","ID","name","path","collectionId","SortForm","value","setValue","onSubmit","e","preventDefault","onChange","target","type","AssetCard","src","alt","width","height","icon","faThumbtack","size","onClick","collections","masterAssetId","tags","subTag","assets","CollectionsInfo","setDataFromCollection","setDefaultMasterId","masterIdObj","setCollections","Promise","resolve","setTimeout","then","forEach","collection","getRecurName","tag","CollectionCard","masterPath","setMasterPath","handleClick","collectionAssets","filter","getAssetsByCollectionAsync","assetId","find","Error","getAssetByIdAsync","App","setAssets","setMasterIdObj","T","curMasterId","dataFromCollection","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f9250c9b.chunk.js","sourcesContent":["import React, { useState } from \"react\"\nimport \"../styles.css\"\nimport { faThumbtack } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport useSortForm from \"./useSortForm\"\n\nexport default function AssetsInfo({selectedAssets, setMasterId, masterId}) { \n  const [data, setSortAssets] = useSortForm(selectedAssets)\n  \n  return (\n    <div>\n      <div className=\"sortForm\">\n        {\n          selectedAssets.length!==0?\n          <SortForm \n          setSortAssets={setSortAssets}\n          /> \n          : null\n        }\n        \n      </div>\n      \n      <div className=\"assetsInfo\">\n        {\n          data.map(asset =>\n            <AssetCard\n              key={asset.id}\n              ID={asset.id}\n              name={asset.name}\n              path={`https://jing-chu.github.io/react_hooks/images/${asset.path}`}\n              collectionId={asset.collectionId}\n              setMasterId={setMasterId}\n              masterId={masterId}              \n            />)\n        }\n      </div>\n    </div>\n  )\n}\n\nexport const SortForm = ({setSortAssets}) => {\n  const [value, setValue] = useState('name')\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setSortAssets(value)\n  }\n\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className=\"sort-label\">\n        Sort by:\n      <select className=\"sort-select\" value={value} onChange={e => setValue(e.target.value)}>\n          <option value=\"name\">Name</option>\n          <option value=\"id\">Id</option>\n        </select>\n      </label>\n      <input type=\"submit\" value=\"Sort\" />\n    </form>\n  );\n\n}\n\nexport const AssetCard = ({ ID, name, path, collectionId, setMasterId, masterId }) => {\n\n  return (\n    <div className=\"asset-card\">\n      <img src={path} alt={name} width=\"150\" height=\"150\" />\n      <div className=\"asset-detail\">\n        <p>Name: {name}</p>\n        <p>ID: {ID}</p>\n       \n        {\n          (ID === masterId) ?\n            <FontAwesomeIcon icon={faThumbtack} size=\"2x\" />\n            : <button className=\"master\" onClick={()=>{setMasterId(collectionId, ID)}}>\n              Set Master\n              </button>\n        } \n    \n      </div>\n    </div>\n  )\n\n}","import  { useState, useEffect } from 'react'\n\nexport default function useSortForm (initialData) {\n  const [ data, setData ] = useState(initialData) \n\n  useEffect(() => {\n    setData(initialData)\n  },[initialData]) \n\n  const setSortAssets = (sortKey)=>{\n        const compare_fun=(a, b)=>{\n            if(a[sortKey] < b[sortKey]){\n                return -1;\n            }else if(a[sortKey] > b[sortKey]){\n                return 1;\n            }else{\n                return 0;\n            }\n        }   \n    setData([...data.sort(compare_fun)]) \n  } \n\n  return [data, setSortAssets]   \n  \n}\n \n","const collections = [\n    {\n        id: 1,\n        name: \"The Simpsons\",\n        masterAssetId: 13,\n        tags: {\n            name: \"Cartoon\",\n            subTag: {\n                name: \"Simpsons family\",\n                subTag: {\n                    name: \"2014\",\n                },\n            },\n        },\n    },\n    {\n        id: 2,\n        name: \"Super heroes\",\n        masterAssetId: 24,\n        tags: {\n            name: \"DC Super heroes\",\n            subTag: {\n                name: \"2014\",\n            },\n        },\n    },\n    {\n        id: 3,\n        name: \"Toy story\",\n        masterAssetId: 31,\n        tags: {\n            name: \"Disney\",\n            subTag: {\n                name: \"Pixar\",\n                subTag: {\n                    name: \"Original movie\",\n                    subTag: {\n                        name: \"2010\",\n                    },\n                },\n            },\n        },\n    },\n    {\n        id: 4,\n        name: \"Ninjago\",\n        masterAssetId: 42,\n        tags: {\n            name: \"Ninja\",\n            subTag: {\n                name: \"Secret Ninja Force\",\n                subTag: {\n                    name: \"2017\",\n                },\n            },\n        },\n    },\n];\n\nconst assets = [\n    {\n        id: 11,\n        name: \"Homer Simpson\",\n        path: \"Homer.jpg\",\n        collectionId: 1,\n    },\n    {\n        id: 12,\n        name: \"Lisa Simpson\",\n        path: \"Lisa.jpg\",\n        collectionId: 1,\n    },\n    {\n        id: 13,\n        name: \"Bart Simpson\",\n        path: \"Bart.jpg\",\n        collectionId: 1,\n    },\n    {\n        id: 14,\n        name: \"Marge Simpson\",\n        path: \"Marge.jpg\",\n        collectionId: 1,\n    },\n    {\n        id: 15,\n        name: \"Grampa Simpson\",\n        path: \"Grampa.jpg\",\n        collectionId: 1,\n    },\n    {\n        id: 16,\n        name: \"Maggie Simpson\",\n        path: \"Maggie.jpg\",\n        collectionId: 1,\n    },\n    {\n        id: 21,\n        name: \"Green Lantern\",\n        path: \"Green lantern.jpg\",\n        collectionId: 2,\n    },\n    {\n        id: 22,\n        name: \"Flash\",\n        path: \"Flash.jpg\",\n        collectionId: 2,\n    },\n    {\n        id: 23,\n        name: \"Batman\",\n        path: \"Batman.jpg\",\n        collectionId: 2,\n    },\n    {\n        id: 24,\n        name: \"Superman\",\n        path: \"Superman.jpg\",\n        collectionId: 2,\n    },\n    {\n        id: 31,\n        name: \"Buzz Lightyear\",\n        path: \"Buzz.jpg\",\n        collectionId: 3,\n    },\n    {\n        id: 32,\n        name: \"Alien\",\n        path: \"Alien.jpg\",\n        collectionId: 3,\n    },\n    {\n        id: 41,\n        name: \"Spinjitzu training Nya\",\n        path: \"Nya.jpg\",\n        collectionId: 4,\n    },\n    {\n        id: 42,\n        name: \"Master Wu\",\n        path: \"Wu.jpg\",\n        collectionId: 4,\n    },\n    {\n        id: 43,\n        name: \"Lloyd\",\n        path: \"Lloyd.jpg\",\n        collectionId: 4,\n    },\n];\n\nexport const getCollectionsAsync = () => {\n    return new Promise((resolve) => setTimeout(() => resolve(collections), 1000));\n};\n\nexport const getAssetByIdAsync = (assetId) => {\n    const asset = assets.find((a) => a.id === assetId);\n\n    if (!asset) {\n        throw new Error(\"Asset not found\" + assetId);\n    }\n\n    return new Promise((resolve) => setTimeout(() => resolve(asset), 500));\n};\n\nexport const getAssetsByCollectionAsync = (collectionId) => {\n    const collectionAssets = assets.filter((asset) => asset.collectionId === collectionId);\n\n    return new Promise((resolve) => setTimeout(() => resolve(collectionAssets), 1000));\n};","import React, { useState, useEffect } from \"react\"\nimport \"../styles.css\"\nimport { getCollectionsAsync } from \"../api/data.js\"\nimport { getAssetsByCollectionAsync } from \"../api/data.js\"\nimport { getAssetByIdAsync } from \"../api/data.js\"\n\n\nexport default function CollectionsInfo ({setDataFromCollection, setDefaultMasterId, masterIdObj}) {\n  const [ collections, setCollections ] = useState([])\n\n  useEffect(() => {\n    getCollectionsAsync().then((data) => {\n      setCollections(data)\n      data.forEach(collection => {\n        setDefaultMasterId(collection.id, collection.masterAssetId)\n      })\n    })\n  },[])\n\n  const getRecurName = (tag) => {\n    if('subTag' in tag === false){\n      return tag.name\n    }\n    return `${tag.name} > ${getRecurName(tag.subTag)}`\n  }\n\n  return (\n    <div className=\"collectionsInfo\">\n      <h1>Please select one collection</h1>\n      {collections.map(collection =>\n        <CollectionCard\n          key={collection.id}\n          ID={collection.id}\n          name={collection.name}\n          tag={getRecurName(collection.tags)}\n          setDataFromCollection={setDataFromCollection}\n          masterId={masterIdObj[collection.id] || collection.masterAssetId}\n        />\n      )}\n    </div>\n  )\n\n} \n\nexport const CollectionCard = ({ID,name,tag,setDataFromCollection,masterId}) =>  {\n\n  const [masterPath, setMasterPath] = useState(\"\")\n\n  const handleClick = (e) => {\n    e.preventDefault()\n    let collectionId = ID\n    getAssetsByCollectionAsync(collectionId).then((data) => {\n      setDataFromCollection(data)\n    })\n  }\n\n\n  useEffect(() => {\n    getAssetByIdAsync(masterId).then((data) => {\n    setMasterPath(\"https://jing-chu.github.io/react_hooks/images/\" + data.path )\n    })\n  },[masterId])\n    \n    return (\n      <div>\n        <p >{tag}</p>\n        <div className=\"collection-card\">\n          <img className=\"collection-img\" src={masterPath} alt={name} onClick={handleClick} width=\"150\" height=\"150\" />\n          <div className=\"collection-detail\">\n            <p className=\"collection-select\" onClick={handleClick}>\n              {name}\n            </p>\n          </div>\n        </div>\n      </div>\n    )\n  \n}","import React, { useState } from \"react\"\nimport AssetsInfo from './components/AssetsInfo'\nimport CollectionsInfo from './components/CollectionsInfo'\nimport \"./styles.css\"\n\n\nexport default function App(){\n  const [assets, setAssets] = useState([])\n  \n  const [masterIdObj, setMasterIdObj] = useState({})\n\n  const setMasterId = (collectionId, masterId)=> {\n    if (masterIdObj[collectionId]!== masterId){\n      const T={...masterIdObj}\n      T[collectionId]=masterId   \n      setMasterIdObj(T)\n    }\n  }\n  \n  const curMasterId = assets.length === 0 ? 0 : masterIdObj[assets[0].collectionId] \n\n  return(\n    <div className=\"app\">\n      <CollectionsInfo setDataFromCollection={(dataFromCollection)=>{setAssets(dataFromCollection)}}\n        setDefaultMasterId={setMasterId}\n        masterIdObj={masterIdObj}     \n        />\n  \n      <AssetsInfo selectedAssets={assets}\n        setMasterId={setMasterId}\n        masterId={curMasterId}\n        />\n    </div>\n  )\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}