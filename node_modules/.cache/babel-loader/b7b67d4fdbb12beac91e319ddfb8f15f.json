{"ast":null,"code":"const collections = [{\n  id: 1,\n  name: \"The Simpsons\",\n  masterAssetId: 13,\n  tags: {\n    name: \"Cartoon\",\n    subTag: {\n      name: \"Simpsons family\",\n      subTag: {\n        name: \"2014\"\n      }\n    }\n  }\n}, {\n  id: 2,\n  name: \"Super heroes\",\n  masterAssetId: 24,\n  tags: {\n    name: \"DC Super heroes\",\n    subTag: {\n      name: \"2014\"\n    }\n  }\n}, {\n  id: 3,\n  name: \"Toy story\",\n  masterAssetId: 31,\n  tags: {\n    name: \"Disney\",\n    subTag: {\n      name: \"Pixar\",\n      subTag: {\n        name: \"Original movie\",\n        subTag: {\n          name: \"2010\"\n        }\n      }\n    }\n  }\n}, {\n  id: 4,\n  name: \"Ninjago\",\n  masterAssetId: 42,\n  tags: {\n    name: \"Ninja\",\n    subTag: {\n      name: \"Secret Ninja Force\",\n      subTag: {\n        name: \"2017\"\n      }\n    }\n  }\n}];\nconst assets = [{\n  id: 11,\n  name: \"Homer Simpson\",\n  path: \"Homer.jpg\",\n  collectionId: 1\n}, {\n  id: 12,\n  name: \"Lisa Simpson\",\n  path: \"Lisa.jpg\",\n  collectionId: 1\n}, {\n  id: 13,\n  name: \"Bart Simpson\",\n  path: \"Bart.jpg\",\n  collectionId: 1\n}, {\n  id: 14,\n  name: \"Marge Simpson\",\n  path: \"Marge.jpg\",\n  collectionId: 1\n}, {\n  id: 15,\n  name: \"Grampa Simpson\",\n  path: \"Grampa.jpg\",\n  collectionId: 1\n}, {\n  id: 16,\n  name: \"Maggie Simpson\",\n  path: \"Maggie.jpg\",\n  collectionId: 1\n}, {\n  id: 21,\n  name: \"Green Lantern\",\n  path: \"Green lantern.jpg\",\n  collectionId: 2\n}, {\n  id: 22,\n  name: \"Flash\",\n  path: \"Flash.jpg\",\n  collectionId: 2\n}, {\n  id: 23,\n  name: \"Batman\",\n  path: \"Batman.jpg\",\n  collectionId: 2\n}, {\n  id: 24,\n  name: \"Superman\",\n  path: \"Superman.jpg\",\n  collectionId: 2\n}, {\n  id: 31,\n  name: \"Buzz Lightyear\",\n  path: \"Buzz.jpg\",\n  collectionId: 3\n}, {\n  id: 32,\n  name: \"Alien\",\n  path: \"Alien.jpg\",\n  collectionId: 3\n}, {\n  id: 41,\n  name: \"Spinjitzu training Nya\",\n  path: \"Nya.jpg\",\n  collectionId: 4\n}, {\n  id: 42,\n  name: \"Master Wu\",\n  path: \"Wu.jpg\",\n  collectionId: 4\n}, {\n  id: 43,\n  name: \"Lloyd\",\n  path: \"Lloyd.jpg\",\n  collectionId: 4\n}];\nexport const getCollectionsAsync = () => {\n  return new Promise(resolve => setTimeout(() => resolve(collections), 1000));\n};\nexport const getAssetByIdAsync = assetId => {\n  const asset = assets.find(a => a.id === assetId);\n\n  if (!asset) {\n    throw new Error(\"Asset not found\" + assetId);\n  }\n\n  return new Promise(resolve => setTimeout(() => resolve(asset), 500));\n};\nexport const getAssetsByCollectionAsync = collectionId => {\n  const collectionAssets = assets.filter(asset => asset.collectionId === collectionId);\n  return new Promise(resolve => setTimeout(() => resolve(collectionAssets), 1000));\n};","map":{"version":3,"sources":["/Users/xiongjieyi/repositories/react_hooks/src/api/data.js"],"names":["collections","id","name","masterAssetId","tags","subTag","assets","path","collectionId","getCollectionsAsync","Promise","resolve","setTimeout","getAssetByIdAsync","assetId","asset","find","a","Error","getAssetsByCollectionAsync","collectionAssets","filter"],"mappings":"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","sourcesContent":["const collections = [\n    {\n        id: 1,\n        name: \"The Simpsons\",\n        masterAssetId: 13,\n        tags: {\n            name: \"Cartoon\",\n            subTag: {\n                name: \"Simpsons family\",\n                subTag: {\n                    name: \"2014\",\n                },\n            },\n        },\n    },\n    {\n        id: 2,\n        name: \"Super heroes\",\n        masterAssetId: 24,\n        tags: {\n            name: \"DC Super heroes\",\n            subTag: {\n                name: \"2014\",\n            },\n        },\n    },\n    {\n        id: 3,\n        name: \"Toy story\",\n        masterAssetId: 31,\n        tags: {\n            name: \"Disney\",\n            subTag: {\n                name: \"Pixar\",\n                subTag: {\n                    name: \"Original movie\",\n                    subTag: {\n                        name: \"2010\",\n                    },\n                },\n            },\n        },\n    },\n    {\n        id: 4,\n        name: \"Ninjago\",\n        masterAssetId: 42,\n        tags: {\n            name: \"Ninja\",\n            subTag: {\n                name: \"Secret Ninja Force\",\n                subTag: {\n                    name: \"2017\",\n                },\n            },\n        },\n    },\n];\n\nconst assets = [\n    {\n        id: 11,\n        name: \"Homer Simpson\",\n        path: \"Homer.jpg\",\n        collectionId: 1,\n    },\n    {\n        id: 12,\n        name: \"Lisa Simpson\",\n        path: \"Lisa.jpg\",\n        collectionId: 1,\n    },\n    {\n        id: 13,\n        name: \"Bart Simpson\",\n        path: \"Bart.jpg\",\n        collectionId: 1,\n    },\n    {\n        id: 14,\n        name: \"Marge Simpson\",\n        path: \"Marge.jpg\",\n        collectionId: 1,\n    },\n    {\n        id: 15,\n        name: \"Grampa Simpson\",\n        path: \"Grampa.jpg\",\n        collectionId: 1,\n    },\n    {\n        id: 16,\n        name: \"Maggie Simpson\",\n        path: \"Maggie.jpg\",\n        collectionId: 1,\n    },\n    {\n        id: 21,\n        name: \"Green Lantern\",\n        path: \"Green lantern.jpg\",\n        collectionId: 2,\n    },\n    {\n        id: 22,\n        name: \"Flash\",\n        path: \"Flash.jpg\",\n        collectionId: 2,\n    },\n    {\n        id: 23,\n        name: \"Batman\",\n        path: \"Batman.jpg\",\n        collectionId: 2,\n    },\n    {\n        id: 24,\n        name: \"Superman\",\n        path: \"Superman.jpg\",\n        collectionId: 2,\n    },\n    {\n        id: 31,\n        name: \"Buzz Lightyear\",\n        path: \"Buzz.jpg\",\n        collectionId: 3,\n    },\n    {\n        id: 32,\n        name: \"Alien\",\n        path: \"Alien.jpg\",\n        collectionId: 3,\n    },\n    {\n        id: 41,\n        name: \"Spinjitzu training Nya\",\n        path: \"Nya.jpg\",\n        collectionId: 4,\n    },\n    {\n        id: 42,\n        name: \"Master Wu\",\n        path: \"Wu.jpg\",\n        collectionId: 4,\n    },\n    {\n        id: 43,\n        name: \"Lloyd\",\n        path: \"Lloyd.jpg\",\n        collectionId: 4,\n    },\n];\n\nexport const getCollectionsAsync = () => {\n    return new Promise((resolve) => setTimeout(() => resolve(collections), 1000));\n};\n\nexport const getAssetByIdAsync = (assetId) => {\n    const asset = assets.find((a) => a.id === assetId);\n\n    if (!asset) {\n        throw new Error(\"Asset not found\" + assetId);\n    }\n\n    return new Promise((resolve) => setTimeout(() => resolve(asset), 500));\n};\n\nexport const getAssetsByCollectionAsync = (collectionId) => {\n    const collectionAssets = assets.filter((asset) => asset.collectionId === collectionId);\n\n    return new Promise((resolve) => setTimeout(() => resolve(collectionAssets), 1000));\n};"]},"metadata":{},"sourceType":"module"}