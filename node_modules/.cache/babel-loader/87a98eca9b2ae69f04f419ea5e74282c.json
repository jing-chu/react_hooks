{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nexport default function useSortForm(initialData) {\n  const [data, setData] = useState(initialData);\n  useEffect(() => {\n    setData(initialData);\n  }, [initialData]); //console.dir('initialData: '+ data)\n\n  const setSortAssets = sortKey => {\n    const compare_fun = (a, b) => {\n      if (a[sortKey] < b[sortKey]) {\n        return -1;\n      } else if (a[sortKey] > b[sortKey]) {\n        return 1;\n      } else {\n        return 0;\n      }\n    };\n\n    setData(data.sort(compare_fun));\n  }; //console.dir('data returned: '+ data[0])  \n\n\n  return [data, setSortAssets];\n}","map":{"version":3,"sources":["/Users/xiongjieyi/repositories/react_hooks/src/components/useSortForm.js"],"names":["React","useState","useEffect","useSortForm","initialData","data","setData","setSortAssets","sortKey","compare_fun","a","b","sort"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,eAAe,SAASC,WAAT,CAAsBC,WAAtB,EAAmC;AAChD,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBL,QAAQ,CAACG,WAAD,CAAlC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,OAAO,CAACF,WAAD,CAAP;AACD,GAFQ,EAEP,CAACA,WAAD,CAFO,CAAT,CAHgD,CAOhD;;AAEE,QAAMG,aAAa,GAAIC,OAAD,IAAW;AAC7B,UAAMC,WAAW,GAAC,CAACC,CAAD,EAAIC,CAAJ,KAAQ;AACtB,UAAGD,CAAC,CAACF,OAAD,CAAD,GAAaG,CAAC,CAACH,OAAD,CAAjB,EAA2B;AACvB,eAAO,CAAC,CAAR;AACH,OAFD,MAEM,IAAGE,CAAC,CAACF,OAAD,CAAD,GAAaG,CAAC,CAACH,OAAD,CAAjB,EAA2B;AAC7B,eAAO,CAAP;AACH,OAFK,MAED;AACD,eAAO,CAAP;AACH;AACJ,KARD;;AASJF,IAAAA,OAAO,CAACD,IAAI,CAACO,IAAL,CAAUH,WAAV,CAAD,CAAP;AAEC,GAZD,CAT8C,CAuB9C;;;AACF,SAAO,CAACJ,IAAD,EAAOE,aAAP,CAAP;AAID","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nexport default function useSortForm (initialData) {\n  const [ data, setData ] = useState(initialData) \n\n  useEffect(() => {\n    setData(initialData)\n  },[initialData]) \n\n  //console.dir('initialData: '+ data)\n\n    const setSortAssets = (sortKey)=>{\n        const compare_fun=(a, b)=>{\n            if(a[sortKey] < b[sortKey]){\n                return -1;\n            }else if(a[sortKey] > b[sortKey]){\n                return 1;\n            }else{\n                return 0;\n            }\n        }   \n    setData(data.sort(compare_fun))\n    \n    } \n\n    //console.dir('data returned: '+ data[0])  \n  return [data, setSortAssets]   \n \n\n  \n}\n \n"]},"metadata":{},"sourceType":"module"}